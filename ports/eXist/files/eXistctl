#! /usr/bin/env PYTHONPATH=%%APP_HOME%%/thirdparty python

################################################################################
# Author:        Jean-Baptiste Quenot <jb.quenot@caraldi.com>
# Purpose:       Control eXist process
# Date Created:  2004-08-30 17:00:54
# Revision:      $Id: existctl,v 1.6 2004/09/10 08:12:35 jbquenot Exp $
################################################################################
# Copyright (c) 2004, Jean-Baptiste Quenot <jb.quenot@caraldi.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * The name of the contributors may not be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
################################################################################

import sys, os, caraldi

args = {
    "LOG_FILE": "%%LOG_FILE%%",
    "APP_HOME": "%%APP_HOME%%",
    "COMMAND":  "%%APP_HOME%%" + "/bin/startup.sh",
    "APP_NAME": "%%APP_NAME%%",
    "PID_FILE": "%%PID_FILE%%"
}

def usage():
    print >> sys.stderr, "Usage: %s {start|stop|restart}" % sys.argv[0]

if __name__ == '__main__':
    args['cmdargs'] = sys.argv[1:]
    ctl = caraldi.DaemonCtl(args)

    if len(sys.argv) != 2:
        usage()
        sys.exit(1)

    if sys.argv[1] == "start":
        ctl.start()

    elif sys.argv[1] == "stop":
        ctl.stop()

    elif sys.argv[1] == "restart":
        ctl.stop()
        ctl.start()

    else:
        usage()
        sys.exit(1)
