Index: src/main/java/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java
===================================================================
--- src/main/java/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java	(revision 512676)
+++ src/main/java/wicket/request/target/coding/PackageRequestTargetUrlCodingStrategy.java	(working copy)
@@ -21,6 +21,7 @@
 import wicket.Session;
 import wicket.protocol.http.request.WebRequestCodingStrategy;
 import wicket.request.RequestParameters;
+import wicket.request.target.basic.URIRequestTargetUrlCodingStrategy;
 import wicket.request.target.component.BookmarkablePageRequestTarget;
 import wicket.request.target.component.IBookmarkablePageRequestTarget;
 import wicket.util.lang.Classes;
@@ -33,7 +34,7 @@
  * @author Eelco Hillenius
  * @author Igor Vaynberg
  */
-public class PackageRequestTargetUrlCodingStrategy extends AbstractRequestTargetUrlCodingStrategy
+public class PackageRequestTargetUrlCodingStrategy extends URIRequestTargetUrlCodingStrategy
 {
 	/** package for this mount. */
 	private final PackageName packageName;
@@ -57,36 +58,16 @@
 	 */
 	public IRequestTarget decode(RequestParameters requestParameters)
 	{
-		String remainder = requestParameters.getPath().substring(getMountPath().length());
-		final String parametersFragment;
-		int ix = remainder.indexOf('/', 1);
-		if (ix == -1)
-		{
-			ix = remainder.length();
-			parametersFragment = "";
-		}
-		else
-		{
-			parametersFragment = remainder.substring(ix);
-		}
-
-		if (remainder.startsWith("/"))
-		{
-			remainder = remainder.substring(1);
-			ix--;
-		}
-
-		final String bookmarkablePageClassName = packageName + "." + remainder.substring(0, ix);
+		PageParameters pageParameters = decodeParameters(requestParameters);
+		final String bookmarkablePageClassName = packageName + "." + pageParameters.getString(URI);
 		Class bookmarkablePageClass = Session.get().getClassResolver().resolveClass(
 				bookmarkablePageClassName);
-		PageParameters parameters = new PageParameters(decodeParameters(parametersFragment,
-				requestParameters.getParameters()));
 
-		final String pageMapName = (String)parameters.remove(WebRequestCodingStrategy.PAGEMAP);
+		final String pageMapName = (String)pageParameters.remove(WebRequestCodingStrategy.PAGEMAP);
 		requestParameters.setPageMapName(pageMapName);
 
 		BookmarkablePageRequestTarget target = new BookmarkablePageRequestTarget(pageMapName,
-				bookmarkablePageClass, parameters);
+				bookmarkablePageClass, pageParameters);
 		return target;
 	}
 
