#! /usr/bin/env python

import os, sys
import pygtk
pygtk.require('2.0')
import gnome.zvt, gtk, string

def child_died_event(zvt):
    sys.exit(0)

def main():
    #font_name = "-misc-fixed-medium-r-normal--20-200-75-75-c-100-*-*"
    font_name = "-misc-fixed-medium-r-semicondensed-*-*-120-*-*-c-*-iso10646-1"

    win = gtk.Window()
    win.connect("delete_event", gtk.mainquit)
    win.set_title("ZTerm")
    win.set_resizable(gtk.TRUE);
    win.set_default_size(500, 500)

    hbox = gtk.HBox()
    win.add(hbox)
    hbox.show()

    term = gnome.zvt.Term(81, 25)
    term.set_scrollback(50)
    term.set_font_name(font_name);
    term.connect("child_died", child_died_event)
    hbox.pack_start(term)
    term.show()

    scroll = gtk.VScrollbar(term.adjustment)
    hbox.pack_start(scroll, expand=gtk.FALSE)
    scroll.show()

    charwidth = term.charwidth
    charheight = term.charheight
    win.set_geometry_hints(geometry_widget=term,
                   min_width=2*charwidth, min_height=2*charheight,
                   base_width=charwidth,  base_height=charheight,
                   width_inc=charwidth,   height_inc=charheight)
    win.show()

    pid = term.forkpty()
    if pid == -1:
        print "Couldn't fork"
        sys.exit(1)
    if pid == 0:
        argv = sys.argv[1:]
        if (len(argv)):
            if argv[0] == '-':
                while (1):
                    line = sys.stdin.readline()
                    if line == '':
                        break
                    print line
            else:
                #os.execvp(argv[0], argv)
                cmd_status = os.system(string.join(argv))

                print

                if (cmd_status != 0):
                    print "[1;31m%s returned error %u[0;m" % (argv[0], cmd_status)
                else:
                    print "[1;32m%s completed successfully[0;m" % argv[0]

                print

        os.execv('/usr/bin/env', ['/usr/bin/env', 'bash'])
        print "Couldn't exec bash"
        os._exit(1)
    # this is executed by parent process only:
    gtk.mainloop()

if __name__ == '__main__': main()
