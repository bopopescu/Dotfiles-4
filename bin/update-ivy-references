#! /usr/bin/env python
#
# $Id: jarfind 741 2006-06-19 08:24:02Z jbq $
#
# Copyright (c) 2007, Jean-Baptiste Quenot <jbq@caraldi.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * The name of the contributors may not be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import patchdist, sys, getopt, os.path

def usage():
    print """This program searches recursively for ivy.xml files in the
given directories and updates the dependency represented by
(organisation and name) with the new version number
"""
    print "Usage: %s -o <organisation> -n <name> -r <new version> <directory...>" % os.path.basename(sys.argv[0])
    print
    print """  NOTE: <new version> is the new version of the artifact,
        which will replace the previous version number"""
    sys.exit(1)

if __name__ == "__main__":
    rev = org = name = None
    opts, args = getopt.getopt (sys.argv[1:], 'r:n:o:', ['rev=', 'name=', 'org='])

    # Fetch options
    for o, a in opts:
        if o in ("-r", "--rev"):
            rev=a
        elif o in ("-o", "--org"):
            org=a
        elif o in ("-n", "--name"):
            name=a

    if not(rev) or not(org) or not(name) or not(args):
        usage()

    #  os.path.dirname(sys.path[0]) + "/.."
    for dir in args:
        print "Updating ivy references in %s" % dir
        patchdist.UpdateIvyReferences(org, name, rev).walk(dir)
